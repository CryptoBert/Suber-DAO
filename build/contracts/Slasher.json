{
  "contractName": "Slasher",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "assemblyDuration",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "majorityQuotum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "makeFromCommitToRevealOrCancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "referendumQuotum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "makeFromRevealOrCancelToAccepted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "name": "secret",
          "type": "bytes32"
        },
        {
          "name": "myVote",
          "type": "bool"
        }
      ],
      "name": "ballotReveal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "makeFromRevealOrCancelToRejected",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "ballotSignal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "cancelSignal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "declareAssembly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "name": "blindedVote",
          "type": "bytes32"
        }
      ],
      "name": "ballotCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "name": "secret",
          "type": "bytes32"
        },
        {
          "name": "myVote",
          "type": "bool"
        }
      ],
      "name": "cancelBallot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingWindow",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastAssembly",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastProposed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "revealOrCancelWindow",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "name": "_subject",
          "type": "bytes32"
        },
        {
          "name": "_effect",
          "type": "bytes32[1]"
        }
      ],
      "name": "makeFromDefaultToReferendum",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "blindedVoteUsed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposalRegistry",
      "outputs": [
        {
          "name": "tokensInFavor",
          "type": "uint256"
        },
        {
          "name": "tokensAgainst",
          "type": "uint256"
        },
        {
          "name": "subject",
          "type": "bytes32"
        },
        {
          "name": "status",
          "type": "uint8"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "makeFromReferendumToCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "endAssembly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "name": "_subject",
          "type": "bytes32"
        },
        {
          "name": "_effect",
          "type": "bytes32[1]"
        }
      ],
      "name": "makeFromDefaultToCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "vouchersOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "makeFromReferendumToRejected",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "assemblyInterval",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumVouchersToPropose",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "poorGuy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Slashed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        }
      ],
      "name": "AssemblyDeclared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        }
      ],
      "name": "AssemblyCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "newStatus",
          "type": "uint8"
        }
      ],
      "name": "ProposalStatusChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "ReferendumProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "ProposalProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "AcceptanceSignalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "blindedVote",
          "type": "bytes32"
        }
      ],
      "name": "BallotCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "vote",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "secret",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "amountOfVouchers",
          "type": "uint256"
        }
      ],
      "name": "BallotRevealed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "callee",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "vote",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "secret",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "amountOfVouchers",
          "type": "uint256"
        }
      ],
      "name": "BallotCancelled",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "poorGuy",
          "type": "address"
        },
        {
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "name": "poorGuyVote",
          "type": "bool"
        },
        {
          "name": "poorGuyBlindedVote",
          "type": "bytes32"
        },
        {
          "name": "poorGuySecret",
          "type": "bytes32"
        }
      ],
      "name": "slash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806315b10b311461016f57806318160ddd1461019a5780631e955399146101c55780632d94a628146101f057806337a2c5161461022157806338a02d0c1461024c57806338e5ba061461027d57806357ad4c7f146102c85780635905d5c5146102f95780635cad0fc01461032a5780635e9c26991461035b5780635e9da234146103725780636aa59717146103b157806372a6300a146103fc578063776486a4146104275780637d6067c61461045257806384320462146104a9578063850f2192146104d45780638848e84b1461054d5780638950ee2d146105bb57806395cc40b914610604578063a1ea669c1461067b578063ae8887d6146106ac578063b4a0979b146106c3578063ce93da7414610731578063d6811dbc14610788578063ec3f9674146107b9578063f918823f146107e4575b600080fd5b34801561017b57600080fd5b5061018461080f565b6040518082815260200191505060405180910390f35b3480156101a657600080fd5b506101af610815565b6040518082815260200191505060405180910390f35b3480156101d157600080fd5b506101da61081e565b6040518082815260200191505060405180910390f35b3480156101fc57600080fd5b5061021f6004803603810190808035600019169060200190929190505050610824565b005b34801561022d57600080fd5b5061023661096d565b6040518082815260200191505060405180910390f35b34801561025857600080fd5b5061027b6004803603810190808035600019169060200190929190505050610973565b005b34801561028957600080fd5b506102c660048036038101908080356000191690602001909291908035600019169060200190929190803515159060200190929190505050610af8565b005b3480156102d457600080fd5b506102f76004803603810190808035600019169060200190929190505050610f9d565b005b34801561030557600080fd5b506103286004803603810190808035600019169060200190929190505050611121565b005b34801561033657600080fd5b506103596004803603810190808035600019169060200190929190505050611306565b005b34801561036757600080fd5b506103706114a9565b005b34801561037e57600080fd5b506103af6004803603810190808035600019169060200190929190803560001916906020019092919050505061152e565b005b3480156103bd57600080fd5b506103fa60048036038101908080356000191690602001909291908035600019169060200190929190803515159060200190929190505050611855565b005b34801561040857600080fd5b50610411611be1565b6040518082815260200191505060405180910390f35b34801561043357600080fd5b5061043c611be7565b6040518082815260200191505060405180910390f35b34801561045e57600080fd5b50610493600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bed565b6040518082815260200191505060405180910390f35b3480156104b557600080fd5b506104be611c05565b6040518082815260200191505060405180910390f35b3480156104e057600080fd5b5061054b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560001916906020019092919080351515906020019092919080356000191690602001909291908035600019169060200190929190505050611c0b565b005b34801561055957600080fd5b506105b9600480360381019080803560001916906020019092919080356000191690602001909291908060200190600180602002604051908101604052809291908260016020028082843782019150505050509192919290505050611e8b565b005b3480156105c757600080fd5b506105ea600480360381019080803560001916906020019092919050505061200b565b604051808215151515815260200191505060405180910390f35b34801561061057600080fd5b50610633600480360381019080803560001916906020019092919050505061202b565b60405180868152602001858152602001846000191660001916815260200183600781111561065d57fe5b60ff1681526020018281526020019550505050505060405180910390f35b34801561068757600080fd5b506106aa600480360381019080803560001916906020019092919050505061206e565b005b3480156106b857600080fd5b506106c1612251565b005b3480156106cf57600080fd5b5061072f600480360381019080803560001916906020019092919080356000191690602001909291908060200190600180602002604051908101604052809291908260016020028082843782019150505050509192919290505050612320565b005b34801561073d57600080fd5b50610772600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061255d565b6040518082815260200191505060405180910390f35b34801561079457600080fd5b506107b760048036038101908080356000191690602001909291905050506125a6565b005b3480156107c557600080fd5b506107ce6126c8565b6040518082815260200191505060405180910390f35b3480156107f057600080fd5b506107f96126ce565b6040518082815260200191505060405180910390f35b60055481565b60008054905090565b60035481565b6002600781111561083157fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff16600781111561086857fe5b14151561087457600080fd5b42600c6000836000191660001916815260200190815260200160002060050154111515156108a157600080fd5b6007544201600c60008360001916600019168152602001908152602001600020600501819055506003600c6000836000191660001916815260200190815260200160002060040160006101000a81548160ff0219169083600781111561090357fe5b021790555080600019163373ffffffffffffffffffffffffffffffffffffffff167f7cd3cb2d04af5d6a228dbe135cef8bd59865b1da6087526282b538e62e10be6260036040518082600781111561095757fe5b60ff16815260200191505060405180910390a350565b60025481565b6003600781111561098057fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff1660078111156109b757fe5b1415156109c357600080fd5b42600c6000836000191660001916815260200190815260200160002060050154111515156109f057600080fd5b600354620f4240600c6000846000191660001916815260200190815260200160002060020154600c6000856000191660001916815260200190815260200160002060010154811515610a3e57fe5b040210151515610a4d57600080fd5b60046007811115610a5a57fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff166007811115610a9157fe5b505080600019163373ffffffffffffffffffffffffffffffffffffffff167f7cd3cb2d04af5d6a228dbe135cef8bd59865b1da6087526282b538e62e10be62600460405180826007811115610ae257fe5b60ff16815260200191505060405180910390a350565b60036007811115610b0557fe5b600c6000856000191660001916815260200190815260200160002060040160009054906101000a900460ff166007811115610b3c57fe5b141515610b4857600080fd5b600c6000846000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000191681836040516020018083151515157f01000000000000000000000000000000000000000000000000000000000000000281526001018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515610c365780518252602082019150602081019050602083039250610c11565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141515610c7357600080fd5b60006004811115610c8057fe5b600c6000856000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166004811115610cf757fe5b1480610d84575060016004811115610d0b57fe5b600c6000856000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166004811115610d8257fe5b145b80610e10575060026004811115610d9757fe5b600c6000856000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166004811115610e0e57fe5b145b1515610e1b57600080fd5b60036004811115610e2857fe5b600c6000856000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166004811115610e9f57fe5b50508015610ee657610ee0610eb33361255d565b600c60008660001916600019168152602001908152602001600020600101546126d490919063ffffffff16565b50610f21565b610f1f610ef23361255d565b600c60008660001916600019168152602001908152602001600020600201546126d490919063ffffffff16565b505b82600019163373ffffffffffffffffffffffffffffffffffffffff167f3e5d76c126ee95f97bc31144c4ee6f56154b3ef9591ccd0ee2ac9e8663b883ab8385610f693361255d565b60405180841515151581526020018360001916600019168152602001828152602001935050505060405180910390a3505050565b60036007811115610faa57fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff166007811115610fe157fe5b141515610fed57600080fd5b42600c60008360001916600019168152602001908152602001600020600501541115151561101a57600080fd5b600354620f4240600c6000846000191660001916815260200190815260200160002060020154600c600085600019166000191681526020019081526020016000206001015481151561106857fe5b040210151561107657600080fd5b6006600781111561108357fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff1660078111156110ba57fe5b505080600019163373ffffffffffffffffffffffffffffffffffffffff167f7cd3cb2d04af5d6a228dbe135cef8bd59865b1da6087526282b538e62e10be6260066040518082600781111561110b57fe5b60ff16815260200191505060405180910390a350565b6001600781111561112e57fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff16600781111561116557fe5b14151561117157600080fd5b6000600481111561117e57fe5b600c6000836000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1660048111156111f557fe5b14151561120157600080fd5b6001600c6000836000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083600481111561127c57fe5b02179055506112ba61128d3361255d565b600c60008460001916600019168152602001908152602001600020600101546126d490919063ffffffff16565b5080600019163373ffffffffffffffffffffffffffffffffffffffff167f98a9d348ac42ffcd4e388245eb19954bb535468e46278e4dba447caf74a88a3960405160405180910390a350565b6001600781111561131357fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff16600781111561134a57fe5b14151561135657600080fd5b6001600481111561136357fe5b600c6000836000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1660048111156113da57fe5b1415156113e657600080fd5b61141f6113f23361255d565b600c60008460001916600019168152602001908152602001600020600101546126f090919063ffffffff16565b506002600481111561142d57fe5b600c6000836000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1660048111156114a457fe5b505050565b426114c16004546009546126d490919063ffffffff16565b101515156114ce57600080fd5b6001600a60006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f5a9f3dca4f11ce5758212591c09fcbf4327907998551dfadf1eadafe2f66db5660405160405180910390a2565b600d6000826000191660001916815260200190815260200160002060009054906101000a900460ff1615151561156357600080fd5b6002600781111561157057fe5b600c6000846000191660001916815260200190815260200160002060040160009054906101000a900460ff1660078111156115a757fe5b1415156115b357600080fd5b600060048111156115c057fe5b600c6000846000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600481111561163757fe5b14806116c457506001600481111561164b57fe5b600c6000846000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff1660048111156116c257fe5b145b806117505750600260048111156116d757fe5b600c6000846000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16600481111561174e57fe5b145b151561175b57600080fd5b80600c6000846000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181600019169055506001600d6000836000191660001916815260200190815260200160002060006101000a81548160ff02191690831515021790555081600019163373ffffffffffffffffffffffffffffffffffffffff167f0dd26db24b4198de21f2d0c36186e6eb912563dd2afa9fe278fd51e9734964208360405180826000191660001916815260200191505060405180910390a35050565b6003600781111561186257fe5b600c6000856000191660001916815260200190815260200160002060040160009054906101000a900460ff16600781111561189957fe5b1415156118a557600080fd5b600c6000846000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000191681836040516020018083151515157f01000000000000000000000000000000000000000000000000000000000000000281526001018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611993578051825260208201915060208101905060208303925061196e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415156119d057600080fd5b6004808111156119dc57fe5b600c6000856000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166004811115611a5357fe5b14151515611a6057600080fd5b600480811115611a6c57fe5b600c6000856000191660001916815260200190815260200160002060000160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff166004811115611ae357fe5b50508015611b2a57611b24611af73361255d565b600c60008660001916600019168152602001908152602001600020600101546126f090919063ffffffff16565b50611b65565b611b63611b363361255d565b600c60008660001916600019168152602001908152602001600020600201546126f090919063ffffffff16565b505b82600019163373ffffffffffffffffffffffffffffffffffffffff167f87580b37240dceb6b95c73a689ac60d2fcffc6b561ae7b693a8db729fa6b857e8385611bad3361255d565b60405180841515151581526020018360001916600019168152602001828152602001935050505060405180910390a3505050565b60065481565b60095481565b600b6020528060005260406000206000915090505481565b60075481565b816000191683826040516020018083151515157f01000000000000000000000000000000000000000000000000000000000000000281526001018260001916600019168152602001925050506040516020818303038152906040526040518082805190602001908083835b602083101515611c9b5780518252602082019150602081019050602083039250611c76565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141515611cd857600080fd5b8215611db35760066007811115611ceb57fe5b600c6000866000191660001916815260200190815260200160002060040160009054906101000a900460ff166007811115611d2257fe5b141515611d2e57600080fd5b611d4085611d3b8761255d565b612709565b508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f96e0041f14ae401fab2384e3c29da20cb0263ef760c47847db1f13403cea654c611d998861255d565b6040518082815260200191505060405180910390a3611e84565b60046007811115611dc057fe5b600c6000866000191660001916815260200190815260200160002060040160009054906101000a900460ff166007811115611df757fe5b141515611e0357600080fd5b611e1585611e108761255d565b612709565b508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f96e0041f14ae401fab2384e3c29da20cb0263ef760c47847db1f13403cea654c611e6e8861255d565b6040518082815260200191505060405180910390a35b5050505050565b60006007811115611e9857fe5b600c6000856000191660001916815260200190815260200160002060040160009054906101000a900460ff166007811115611ecf57fe5b141515611edb57600080fd5b600a60009054906101000a900460ff16151515611ef757600080fd5b6001600c6000856000191660001916815260200190815260200160002060040160006101000a81548160ff02191690836007811115611f3257fe5b0217905550611f4c600654426126d490919063ffffffff16565b600c60008560001916600019168152602001908152602001600020600501819055508160001916600c60008560001916600019168152602001908152602001600020505080600c60008560001916600019168152602001908152602001600020600601906001611fbd9291906127fd565b5082600019163373ffffffffffffffffffffffffffffffffffffffff167fafe7505848198c1b694b9c827456151aece16f9b6d3f45d1052c6fd2c9c13f5a60405160405180910390a3505050565b600d6020528060005260406000206000915054906101000a900460ff1681565b600c6020528060005260406000206000915090508060010154908060020154908060030154908060040160009054906101000a900460ff16908060050154905085565b6001600781111561207b57fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff1660078111156120b257fe5b1415156120be57600080fd5b600c6000826000191660001916815260200190815260200160002060010154620f4240600c6000846000191660001916815260200190815260200160002060010154021015151561210b57fe5b600254612116610815565b620f4240600c60008560001916600019168152602001908152602001600020600101540281151561214357fe5b041015151561215157600080fd5b6000600c60008360001916600019168152602001908152602001600020600101819055506002600c6000836000191660001916815260200190815260200160002060040160006101000a81548160ff021916908360078111156121b057fe5b02179055506121ca600654426126d490919063ffffffff16565b600c600083600019166000191681526020019081526020016000206005018190555080600019163373ffffffffffffffffffffffffffffffffffffffff167f7cd3cb2d04af5d6a228dbe135cef8bd59865b1da6087526282b538e62e10be6260026040518082600781111561223b57fe5b60ff16815260200191505060405180910390a350565b600a60009054906101000a900460ff16151561226c57600080fd5b4261229860055461228a6004546009546126d490919063ffffffff16565b6126d490919063ffffffff16565b111515156122a557600080fd5b6000600a60006101000a81548160ff0219169083151502179055506122d5600554426126f090919063ffffffff16565b6009819055503373ffffffffffffffffffffffffffffffffffffffff167f9fa4027402e3e2b48eab6286f2d277af27e9a382ec15cde9e8745b237d11550a60405160405180910390a2565b6000600781111561232d57fe5b600c6000856000191660001916815260200190815260200160002060040160009054906101000a900460ff16600781111561236457fe5b14151561237057600080fd5b600a60009054906101000a900460ff16151561238b57600080fd5b6008546123973361255d565b1115156123a357600080fd5b426123f8600654600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126d490919063ffffffff16565b1115151561240557600080fd5b42600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002600c6000856000191660001916815260200190815260200160002060040160006101000a81548160ff0219169083600781111561248457fe5b021790555061249e600654426126d490919063ffffffff16565b600c60008560001916600019168152602001908152602001600020600501819055508160001916600c60008560001916600019168152602001908152602001600020505080600c6000856000191660001916815260200190815260200160002060060190600161250f9291906127fd565b5082600019163373ffffffffffffffffffffffffffffffffffffffff167f0391f4d187e48f1b0f3bd19f51f65d64633c54e93ef79dc56a56791587f88a0460405160405180910390a3505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160078111156125b357fe5b600c6000836000191660001916815260200190815260200160002060040160009054906101000a900460ff1660078111156125ea57fe5b1415156125f657600080fd5b42600c60008360001916600019168152602001908152602001600020600501541115151561262357600080fd5b6007600c6000836000191660001916815260200190815260200160002060040160006101000a81548160ff0219169083600781111561265e57fe5b021790555080600019163373ffffffffffffffffffffffffffffffffffffffff167f7cd3cb2d04af5d6a228dbe135cef8bd59865b1da6087526282b538e62e10be626007604051808260078111156126b257fe5b60ff16815260200191505060405180910390a350565b60045481565b60085481565b600081830190508281101515156126e757fe5b80905092915050565b60008282111515156126fe57fe5b818303905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561275957600080fd5b6127ab82600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126f090919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555092915050565b82805482825590600052602060002090810192821561283f579160200282015b8281111561283e57825182906000191690559160200191906001019061281d565b5b50905061284c9190612850565b5090565b61287291905b8082111561286e576000816000905550600101612856565b5090565b905600a165627a7a7230582060a73b04bf4525db3fe46b36a2989dfba5b3b8bb2171717424f7a7f41bbb03a90029",
  "sourceMap": "686:1389:3:-;;;1735:6:6;1701:40;;1805:6;1773:38;;1858:7;1824:41;;1917:6;1883:40;;1981:6;1951:36;;2041:5;2003:43;;2103:1;2061:43;;2209:1;2179:31;;686:1389:3;;;;;;",
  "deployedSourceMap": "686:1389:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:40:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1883:40:6;;;;;;;;;;;;;;;;;;;;;;;566:89:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;566:89:7;;;;;;;;;;;;;;;;;;;;;;;1773:38:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1773:38:6;;;;;;;;;;;;;;;;;;;;;;;13601:459;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13601:459:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1701:40:6;;;;;;;;;;;;;;;;;;;;;;;16214:533;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16214:533:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14730:1050;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14730:1050:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17181:548;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17181:548:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9443:472;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9443:472:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10528:423;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10528:423:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5680:237;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5680:237:6;;;;;;12444:741;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12444:741:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18400:824;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18400:824:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1951:36:6;;;;;;;;;;;;;;;;;;;;;;;2179:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2179:31:6;;;;;;;;;;;;;;;;;;;;;;;5191:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5191:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2003:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:43:6;;;;;;;;;;;;;;;;;;;;;;;1360:712:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1360:712:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6695:533:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6695:533:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5404:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5404:47:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5346:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5346:52:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11201:743;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11201:743:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6041:278;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6041:278:6;;;;;;8487:698;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8487:698:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:106:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:106:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7507:390:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7507:390:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1824:41:6;;;;;;;;;;;;;;;;;;;;;;;2061:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2061:43:6;;;;;;;;;;;;;;;;;;;;;;;1883:40;;;;:::o;566:89:7:-;610:7;636:12;;629:19;;566:89;:::o;1773:38:6:-;;;;:::o;13601:459::-;13718:21;13679:60;;;;;;;;:16;:28;13696:10;13679:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:60;;;;;;;;;13671:69;;;;;;;;13802:3;13758:16;:28;13775:10;13758:28;;;;;;;;;;;;;;;;;:40;;;:47;;13750:56;;;;;;;;13865:20;;13859:3;:26;13816:16;:28;13833:10;13816:28;;;;;;;;;;;;;;;;;:40;;:69;;;;13933:29;13895:16;:28;13912:10;13895:28;;;;;;;;;;;;;;;;;:35;;;:67;;;;;;;;;;;;;;;;;;;;;;;;14011:10;13977:76;;;13999:10;13977:76;;;14023:29;13977:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;13601:459;:::o;1701:40::-;;;;:::o;16214:533::-;16333:29;16294:68;;;;;;;;:16;:28;16311:10;16294:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:68;;;;;;;;;16286:77;;;;;;;;16425:3;16381:16;:28;16398:10;16381:28;;;;;;;;;;;;;;;;;:40;;;:47;;16373:56;;;;;;;;16552:14;;16540:7;16494:16;:28;16511:10;16494:28;;;;;;;;;;;;;;;;;:42;;;16449:16;:28;16466:10;16449:28;;;;;;;;;;;;;;;;;:42;;;:87;;;;;;;;16448:99;16447:119;;16439:128;;;;;;;;16632:23;16593:62;;;;;;;;:16;:28;16610:10;16593:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:62;;;;;;;;;;16704:10;16670:70;;;16692:10;16670:70;;;16716:23;16670:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;16214:533;:::o;14730:1050::-;14858:29;14819:68;;;;;;;;:16;:28;14836:10;14819:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:68;;;;;;;;;14811:77;;;;;;;;14952:16;:28;14969:10;14952:28;;;;;;;;;;;;;;;;;:43;;:55;14996:10;14952:55;;;;;;;;;;;;;;;:67;;;14906:113;;;14933:6;14940;14916:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;14916:31:6;;;14906:42;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14906:42:6;;;;;;;;;;;;;;;;:113;;;;14898:122;;;;;;;;15117:20;15051:86;;;;;;;;:16;:28;15068:10;15051:28;;;;;;;;;;;;;;;;;:43;;:55;15095:10;15051:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:86;;;;;;;;;:190;;;;15219:22;15153:88;;;;;;;;:16;:28;15170:10;15153:28;;;;;;;;;;;;;;;;;:43;;:55;15197:10;15153:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:88;;;;;;;;;15051:190;:300;;;;15323:28;15257:94;;;;;;;;:16;:28;15274:10;15257:28;;;;;;;;;;;;;;;;;:43;;:55;15301:10;15257:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:94;;;;;;;;;15051:300;15030:331;;;;;;;;15437:27;15371:93;;;;;;;;:16;:28;15388:10;15371:28;;;;;;;;;;;;;;;;;:43;;:55;15415:10;15371:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:93;;;;;;;;;;15477:6;15474:207;;;15499:70;15546:22;15557:10;15546;:22::i;:::-;15499:16;:28;15516:10;15499:28;;;;;;;;;;;;;;;;;:42;;;:46;;:70;;;;:::i;:::-;;15474:207;;;15600:70;15647:22;15658:10;15647;:22::i;:::-;15600:16;:28;15617:10;15600:28;;;;;;;;;;;;;;;;;:42;;;:46;;:70;;;;:::i;:::-;;15474:207;15722:10;15695:78;;;15710:10;15695:78;;;15734:6;15742;15750:22;15761:10;15750;:22::i;:::-;15695:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14730:1050;;;:::o;17181:548::-;17300:29;17261:68;;;;;;;;:16;:28;17278:10;17261:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:68;;;;;;;;;17253:77;;;;;;;;17392:3;17348:16;:28;17365:10;17348:28;;;;;;;;;;;;;;;;;:40;;;:47;;17340:56;;;;;;;;17518:14;;17507:7;17461:16;:28;17478:10;17461:28;;;;;;;;;;;;;;;;;:42;;;17416:16;:28;17433:10;17416:28;;;;;;;;;;;;;;;;;:42;;;:87;;;;;;;;17415:99;17414:118;17406:127;;;;;;;;17598:31;17559:70;;;;;;;;:16;:28;17576:10;17559:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:70;;;;;;;;;;17678:10;17644:78;;;17666:10;17644:78;;;17690:31;17644:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;17181:548;:::o;9443:472::-;9542:25;9503:64;;;;;;;;:16;:28;9520:10;9503:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:64;;;;;;;;;9495:73;;;;;;;;9652:20;9586:86;;;;;;;;:16;:28;9603:10;9586:28;;;;;;;;;;;;;;;;;:43;;:55;9630:10;9586:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:86;;;;;;;;;9578:95;;;;;;;;9748:22;9683:16;:28;9700:10;9683:28;;;;;;;;;;;;;;;;;:43;;:55;9727:10;9683:55;;;;;;;;;;;;;;;:62;;;:87;;;;;;;;;;;;;;;;;;;;;;;;9780:70;9827:22;9838:10;9827;:22::i;:::-;9780:16;:28;9797:10;9780:28;;;;;;;;;;;;;;;;;:42;;;:46;;:70;;;;:::i;:::-;;9897:10;9865:43;;;9885:10;9865:43;;;;;;;;;;;;9443:472;:::o;10528:423::-;10627:25;10588:64;;;;;;;;:16;:28;10605:10;10588:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:64;;;;;;;;;10580:73;;;;;;;;10737:22;10671:88;;;;;;;;:16;:28;10688:10;10671:28;;;;;;;;;;;;;;;;;:43;;:55;10715:10;10671:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:88;;;;;;;;;10663:97;;;;;;;;10770:70;10817:22;10828:10;10817;:22::i;:::-;10770:16;:28;10787:10;10770:28;;;;;;;;;;;;;;;;;:42;;;:46;;:70;;;;:::i;:::-;;10916:28;10850:94;;;;;;;;:16;:28;10867:10;10850:28;;;;;;;;;;;;;;;;;:43;;:55;10894:10;10850:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:94;;;;;;;;;;10528:423;:::o;5680:237::-;5770:3;5732:34;5749:16;;5732:12;;:16;;:34;;;;:::i;:::-;:41;;5724:50;;;;;;;;5863:4;5846:14;;:21;;;;;;;;;;;;;;;;;;5899:10;5882:28;;;;;;;;;;;;5680:237::o;12444:741::-;12526:15;:28;12542:11;12526:28;;;;;;;;;;;;;;;;;;;;;;;;;;;12525:29;12517:38;;;;;;;;12612:21;12573:60;;;;;;;;:16;:28;12590:10;12573:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:60;;;;;;;;;12565:69;;;;;;;;12731:20;12665:86;;;;;;;;:16;:28;12682:10;12665:28;;;;;;;;;;;;;;;;;:43;;:55;12709:10;12665:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:86;;;;;;;;;:190;;;;12833:22;12767:88;;;;;;;;:16;:28;12784:10;12767:28;;;;;;;;;;;;;;;;;:43;;:55;12811:10;12767:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:88;;;;;;;;;12665:190;:300;;;;12937:28;12871:94;;;;;;;;:16;:28;12888:10;12871:28;;;;;;;;;;;;;;;;;:43;;:55;12915:10;12871:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:94;;;;;;;;;12665:300;12644:331;;;;;;;;13055:11;12985:16;:28;13002:10;12985:28;;;;;;;;;;;;;;;;;:43;;:55;13029:10;12985:55;;;;;;;;;;;;;;;:67;;:81;;;;;;;13107:4;13076:15;:28;13092:11;13076:28;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;13154:10;13126:52;;;13142:10;13126:52;;;13166:11;13126:52;;;;;;;;;;;;;;;;;;;;;;;;12444:741;;:::o;18400:824::-;18528:29;18489:68;;;;;;;;:16;:28;18506:10;18489:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:68;;;;;;;;;18481:77;;;;;;;;18622:16;:28;18639:10;18622:28;;;;;;;;;;;;;;;;;:43;;:55;18666:10;18622:55;;;;;;;;;;;;;;;:67;;;18576:113;;;18603:6;18610;18586:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;18586:31:6;;;18576:42;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;18576:42:6;;;;;;;;;;;;;;;;:113;;;;18568:122;;;;;;;;18774:28;18708:94;;;;;;;;:16;:28;18725:10;18708:28;;;;;;;;;;;;;;;;;:43;;:55;18752:10;18708:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:94;;;;;;;;;;18700:103;;;;;;;;18879:28;18813:94;;;;;;;;:16;:28;18830:10;18813:28;;;;;;;;;;;;;;;;;:43;;:55;18857:10;18813:55;;;;;;;;;;;;;;;:62;;;;;;;;;;;;:94;;;;;;;;;;18920:6;18917:207;;;18942:70;18989:22;19000:10;18989;:22::i;:::-;18942:16;:28;18959:10;18942:28;;;;;;;;;;;;;;;;;:42;;;:46;;:70;;;;:::i;:::-;;18917:207;;;19043:70;19090:22;19101:10;19090;:22::i;:::-;19043:16;:28;19060:10;19043:28;;;;;;;;;;;;;;;;;:42;;;:46;;:70;;;;:::i;:::-;;18917:207;19166:10;19138:79;;;19154:10;19138:79;;;19178:6;19186;19194:22;19205:10;19194;:22::i;:::-;19138:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18400:824;;;:::o;1951:36::-;;;;:::o;2179:31::-;;;;:::o;5191:47::-;;;;;;;;;;;;;;;;;:::o;2003:43::-;;;;:::o;1360:712:3:-;1559:18;1500:77;;;1527:11;1540:13;1510:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1510:44:3;;;1500:55;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1500:55:3;;;;;;;;;;;;;;;;:77;;;;1492:86;;;;;;;;1591:11;1588:478;;;1665:31;1626:70;;;;;;;;:16;:28;1643:10;1626:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:70;;;;;;;;;1618:79;;;;;;;;1711:45;1727:7;1736:19;1747:7;1736:10;:19::i;:::-;1711:15;:45::i;:::-;;1795:7;1775:49;;1783:10;1775:49;;;1804:19;1815:7;1804:10;:19::i;:::-;1775:49;;;;;;;;;;;;;;;;;;1588:478;;;1902:23;1863:62;;;;;;;;:16;:28;1880:10;1863:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:62;;;;;;;;;1855:71;;;;;;;;1940:45;1956:7;1965:19;1976:7;1965:10;:19::i;:::-;1940:15;:45::i;:::-;;2024:7;2004:49;;2012:10;2004:49;;;2033:19;2044:7;2033:10;:19::i;:::-;2004:49;;;;;;;;;;;;;;;;;;1588:478;1360:712;;;;;:::o;6695:533:6:-;6847:22;6808:61;;;;;;;;:16;:28;6825:10;6808:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:61;;;;;;;;;6800:70;;;;;;;;6889:14;;;;;;;;;;;6888:15;6880:24;;;;;;;;6952:25;6914:16;:28;6931:10;6914:28;;;;;;;;;;;;;;;;;:35;;;:63;;;;;;;;;;;;;;;;;;;;;;;;7030:21;7038:12;;7030:3;:7;;:21;;;;:::i;:::-;6987:16;:28;7004:10;6987:28;;;;;;;;;;;;;;;;;:40;;:64;;;;7101:8;7061:48;;;:16;:28;7078:10;7061:28;;;;;;;;;;;;;;;;;:36;:48;7157:7;7119:16;:28;7136:10;7119:28;;;;;;;;;;;;;;;;;:35;;:45;;;;;;;:::i;:::-;;7210:10;7179:42;;;7198:10;7179:42;;;;;;;;;;;;6695:533;;;:::o;5404:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;5346:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11201:743::-;11314:25;11275:64;;;;;;;;:16;:28;11292:10;11275:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:64;;;;;;;;;11267:73;;;;;;;;11436:16;:28;11453:10;11436:28;;;;;;;;;;;;;;;;;:42;;;11425:7;11380:16;:28;11397:10;11380:28;;;;;;;;;;;;;;;;;:42;;;:52;:98;;11373:106;;;;;;11572:16;;11554:13;:11;:13::i;:::-;11543:7;11498:16;:28;11515:10;11498:28;;;;;;;;;;;;;;;;;:42;;;:52;11497:70;;;;;;;;:91;;11489:100;;;;;;;;11710:1;11665:16;:28;11682:10;11665:28;;;;;;;;;;;;;;;;;:42;;:46;;;;11759:21;11721:16;:28;11738:10;11721:28;;;;;;;;;;;;;;;;;:35;;;:59;;;;;;;;;;;;;;;;;;;;;;;;11833:21;11841:12;;11833:3;:7;;:21;;;;:::i;:::-;11790:16;:28;11807:10;11790:28;;;;;;;;;;;;;;;;;:40;;:64;;;;11903:10;11869:68;;;11891:10;11869:68;;;11915:21;11869:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;11201:743;:::o;6041:278::-;6089:14;;;;;;;;;;;6081:23;;;;;;;;6182:3;6122:56;6161:16;;6122:34;6139:16;;6122:12;;:16;;:34;;;;:::i;:::-;:38;;:56;;;;:::i;:::-;:63;;6114:72;;;;;;;;6213:5;6196:14;;:22;;;;;;;;;;;;;;;;;;6243:25;6251:16;;6243:3;:7;;:25;;;;:::i;:::-;6228:12;:40;;;;6301:10;6283:29;;;;;;;;;;;;6041:278::o;8487:698::-;8635:22;8596:61;;;;;;;;:16;:28;8613:10;8596:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:61;;;;;;;;;8588:70;;;;;;;;8676:14;;;;;;;;;;;8668:23;;;;;;;;8734:24;;8709:22;8720:10;8709;:22::i;:::-;:49;8701:58;;;;;;;;8823:3;8777:42;8806:12;;8777;:24;8790:10;8777:24;;;;;;;;;;;;;;;;:28;;:42;;;;:::i;:::-;:49;;8769:58;;;;;;;;8864:3;8837:12;:24;8850:10;8837:24;;;;;;;;;;;;;;;:30;;;;8915:21;8877:16;:28;8894:10;8877:28;;;;;;;;;;;;;;;;;:35;;;:59;;;;;;;;;;;;;;;;;;;;;;;;8989:21;8997:12;;8989:3;:7;;:21;;;;:::i;:::-;8946:16;:28;8963:10;8946:28;;;;;;;;;;;;;;;;;:40;;:64;;;;9060:8;9020:48;;;:16;:28;9037:10;9020:28;;;;;;;;;;;;;;;;;:36;:48;9116:7;9078:16;:28;9095:10;9078:28;;;;;;;;;;;;;;;;;:35;;:45;;;;;;;:::i;:::-;;9167:10;9138:40;;;9155:10;9138:40;;;;;;;;;;;;8487:698;;;:::o;454:106:7:-;511:7;537:8;:16;546:6;537:16;;;;;;;;;;;;;;;;530:23;;454:106;;;:::o;7507:390:6:-;7622:25;7583:64;;;;;;;;:16;:28;7600:10;7583:28;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:64;;;;;;;;;7575:73;;;;;;;;7710:3;7666:16;:28;7683:10;7666:28;;;;;;;;;;;;;;;;;:40;;;:47;;7658:56;;;;;;;;7762:33;7724:16;:28;7741:10;7724:28;;;;;;;;;;;;;;;;;:35;;;:71;;;;;;;;;;;;;;;;;;;;;;;;7844:10;7810:80;;;7832:10;7810:80;;;7856:33;7810:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;7507:390;:::o;1824:41::-;;;;:::o;2061:43::-;;;;:::o;1214:123:9:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;1042:110::-;1100:7;1127:1;1122;:6;;1115:14;;;;;;1146:1;1142;:5;1135:12;;1042:110;;;;:::o;802:195:7:-;878:4;912:8;:17;921:7;912:17;;;;;;;;;;;;;;;;902:6;:27;;894:36;;;;;;;;961:29;983:6;961:8;:17;970:7;961:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;940:8;:17;949:7;940:17;;;;;;;;;;;;;;;;:50;;;;;;;;;;;802:195;;;;:::o;686:1389:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "//TODO: Different kind of slashings for different kind of situations\n//TODO: we now slash all voters, but perhaps we can slash those who propose a non-accepted votes as well?\n//TODO: we need different degrees of slashing, since now we take away all voting rights in one slash => not good :(\n\npragma solidity ^0.4.24;\n\nimport \"./VotingEngine.sol\";\n\nimport \"./../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n/**\n * @title Slasher\n * @author Rinke Hendriksen (rinkehendriksen@gmail.com)\n * @dev the Slasher allows for anybody to slash participants. The goal of this contract is to nudge participants of the DAO to vote in accordance with the rules and objectives.\n */\ncontract Slasher is VotingEngine {\n\n    using SafeMath for uint256;\n\n    event Slashed(\n        address indexed callee,\n        address indexed poorGuy,\n        uint256 amount\n    );\n\n    /**\n    * @dev can be called by anybody to slash a person if this person deserves slashing\n    * @param poorGuy The address which will be slashed\n    * @param proposalId the identifier of the vote to which the poorguy casted a 'wrong' vote\n    * @param poorGuyVote the non-blinded vote of the poorGuy\n    * @param poorGuyBlindedVote the blinded vote of the poorGuy\n    * @param poorGuySecret the secret which was used by the poorGuy to shield his blindedVote from the public\n    */\n    function slash(address poorGuy, bytes32 proposalId, bool poorGuyVote, bytes32 poorGuyBlindedVote, bytes32 poorGuySecret ) {\n        require(keccak256(abi.encodePacked(poorGuyVote, poorGuySecret)) == poorGuyBlindedVote);\n        if(poorGuyVote) {\n            require(proposalRegistry[proposalId].status == ProposalStatus.ProposalRejected);\n            decreaseBalance(poorGuy, vouchersOf(poorGuy));\n            emit Slashed(msg.sender, poorGuy, vouchersOf(poorGuy));\n        } else {\n            require(proposalRegistry[proposalId].status == ProposalStatus.Accepted);\n            decreaseBalance(poorGuy, vouchersOf(poorGuy));\n            emit Slashed(msg.sender, poorGuy, vouchersOf(poorGuy));\n\n\n        }\n    }\n\n}\n",
  "sourcePath": "/Users/rinke/Projects/Suber-DAO/contracts/Slasher.sol",
  "ast": {
    "absolutePath": "/Users/rinke/Projects/Suber-DAO/contracts/Slasher.sol",
    "exportedSymbols": {
      "Slasher": [
        1241
      ]
    },
    "id": 1242,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1143,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "292:24:3"
      },
      {
        "absolutePath": "/Users/rinke/Projects/Suber-DAO/contracts/VotingEngine.sol",
        "file": "./VotingEngine.sol",
        "id": 1144,
        "nodeType": "ImportDirective",
        "scope": 1242,
        "sourceUnit": 2391,
        "src": "318:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rinke/Projects/Suber-DAO/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1145,
        "nodeType": "ImportDirective",
        "scope": 1242,
        "sourceUnit": 2717,
        "src": "348:77:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1146,
              "name": "VotingEngine",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2390,
              "src": "706:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VotingEngine_$2390",
                "typeString": "contract VotingEngine"
              }
            },
            "id": 1147,
            "nodeType": "InheritanceSpecifier",
            "src": "706:12:3"
          }
        ],
        "contractDependencies": [
          2390,
          2476
        ],
        "contractKind": "contract",
        "documentation": "@title Slasher\n@author Rinke Hendriksen (rinkehendriksen@gmail.com)\n@dev the Slasher allows for anybody to slash participants. The goal of this contract is to nudge participants of the DAO to vote in accordance with the rules and objectives.",
        "fullyImplemented": true,
        "id": 1241,
        "linearizedBaseContracts": [
          1241,
          2390,
          2476
        ],
        "name": "Slasher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1150,
            "libraryName": {
              "contractScope": null,
              "id": 1148,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2716,
              "src": "732:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2716",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "726:27:3",
            "typeName": {
              "id": 1149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "745:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1158,
            "name": "Slashed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "indexed": true,
                  "name": "callee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "782:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "indexed": true,
                  "name": "poorGuy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "814:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "847:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:95:3"
            },
            "src": "759:109:3"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "1482:590:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1175,
                                  "name": "poorGuyVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "1527:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1176,
                                  "name": "poorGuySecret",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1168,
                                  "src": "1540:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1173,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2718,
                                  "src": "1510:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1510:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1510:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1172,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1500:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1500:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1179,
                          "name": "poorGuyBlindedVote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1166,
                          "src": "1559:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1500:77:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2734,
                        2735
                      ],
                      "referencedDeclaration": 2734,
                      "src": "1492:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:86:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:86:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1183,
                    "name": "poorGuyVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1164,
                    "src": "1591:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "1841:225:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                "typeString": "enum VotingEngine.ProposalStatus"
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1212,
                                    "name": "proposalRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1450,
                                    "src": "1863:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_proposal_$1442_storage_$",
                                      "typeString": "mapping(bytes32 => struct VotingEngine.proposal storage ref)"
                                    }
                                  },
                                  "id": 1214,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1213,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1162,
                                    "src": "1880:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1863:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_proposal_$1442_storage",
                                    "typeString": "struct VotingEngine.proposal storage ref"
                                  }
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "1863:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1216,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "1902:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1424_$",
                                    "typeString": "type(enum VotingEngine.ProposalStatus)"
                                  }
                                },
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Accepted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1902:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "src": "1863:62:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1211,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2734,
                              2735
                            ],
                            "referencedDeclaration": 2734,
                            "src": "1855:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:71:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1220,
                        "nodeType": "ExpressionStatement",
                        "src": "1855:71:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "1956:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1224,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "1976:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1223,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "1965:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1965:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1221,
                            "name": "decreaseBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2451,
                            "src": "1940:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1940:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1227,
                        "nodeType": "ExpressionStatement",
                        "src": "1940:45:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1229,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2731,
                                "src": "2012:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2012:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1231,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "2024:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1233,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "2044:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1232,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "2033:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2033:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1228,
                            "name": "Slashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "2004:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1236,
                        "nodeType": "EmitStatement",
                        "src": "1999:54:3"
                      }
                    ]
                  },
                  "id": 1238,
                  "nodeType": "IfStatement",
                  "src": "1588:478:3",
                  "trueBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "1604:231:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                "typeString": "enum VotingEngine.ProposalStatus"
                              },
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1185,
                                    "name": "proposalRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1450,
                                    "src": "1626:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_proposal_$1442_storage_$",
                                      "typeString": "mapping(bytes32 => struct VotingEngine.proposal storage ref)"
                                    }
                                  },
                                  "id": 1187,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1186,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1162,
                                    "src": "1643:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1626:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_proposal_$1442_storage",
                                    "typeString": "struct VotingEngine.proposal storage ref"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "1626:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1189,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "1665:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1424_$",
                                    "typeString": "type(enum VotingEngine.ProposalStatus)"
                                  }
                                },
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ProposalRejected",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1665:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "src": "1626:70:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2734,
                              2735
                            ],
                            "referencedDeclaration": 2734,
                            "src": "1618:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1618:79:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1193,
                        "nodeType": "ExpressionStatement",
                        "src": "1618:79:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1195,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "1727:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1197,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "1747:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1196,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "1736:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1736:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1194,
                            "name": "decreaseBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2451,
                            "src": "1711:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1711:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1200,
                        "nodeType": "ExpressionStatement",
                        "src": "1711:45:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1202,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2731,
                                "src": "1783:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1783:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1204,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "1795:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1206,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "1815:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1205,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "1804:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1804:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1201,
                            "name": "Slashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "1775:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1775:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1209,
                        "nodeType": "EmitStatement",
                        "src": "1770:54:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev can be called by anybody to slash a person if this person deserves slashing\n@param poorGuy The address which will be slashed\n@param proposalId the identifier of the vote to which the poorguy casted a 'wrong' vote\n@param poorGuyVote the non-blinded vote of the poorGuy\n@param poorGuyBlindedVote the blinded vote of the poorGuy\n@param poorGuySecret the secret which was used by the poorGuy to shield his blindedVote from the public",
            "id": 1240,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "poorGuy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1375:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1392:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "name": "poorGuyVote",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1412:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "name": "poorGuyBlindedVote",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1430:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "name": "poorGuySecret",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1458:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1374:107:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:3"
            },
            "scope": 1241,
            "src": "1360:712:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1242,
        "src": "686:1389:3"
      }
    ],
    "src": "292:1784:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/rinke/Projects/Suber-DAO/contracts/Slasher.sol",
    "exportedSymbols": {
      "Slasher": [
        1241
      ]
    },
    "id": 1242,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1143,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "292:24:3"
      },
      {
        "absolutePath": "/Users/rinke/Projects/Suber-DAO/contracts/VotingEngine.sol",
        "file": "./VotingEngine.sol",
        "id": 1144,
        "nodeType": "ImportDirective",
        "scope": 1242,
        "sourceUnit": 2391,
        "src": "318:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rinke/Projects/Suber-DAO/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "./../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1145,
        "nodeType": "ImportDirective",
        "scope": 1242,
        "sourceUnit": 2717,
        "src": "348:77:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1146,
              "name": "VotingEngine",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2390,
              "src": "706:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VotingEngine_$2390",
                "typeString": "contract VotingEngine"
              }
            },
            "id": 1147,
            "nodeType": "InheritanceSpecifier",
            "src": "706:12:3"
          }
        ],
        "contractDependencies": [
          2390,
          2476
        ],
        "contractKind": "contract",
        "documentation": "@title Slasher\n@author Rinke Hendriksen (rinkehendriksen@gmail.com)\n@dev the Slasher allows for anybody to slash participants. The goal of this contract is to nudge participants of the DAO to vote in accordance with the rules and objectives.",
        "fullyImplemented": true,
        "id": 1241,
        "linearizedBaseContracts": [
          1241,
          2390,
          2476
        ],
        "name": "Slasher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1150,
            "libraryName": {
              "contractScope": null,
              "id": 1148,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2716,
              "src": "732:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2716",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "726:27:3",
            "typeName": {
              "id": 1149,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "745:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1158,
            "name": "Slashed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "indexed": true,
                  "name": "callee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "782:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "indexed": true,
                  "name": "poorGuy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "814:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1156,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "847:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "772:95:3"
            },
            "src": "759:109:3"
          },
          {
            "body": {
              "id": 1239,
              "nodeType": "Block",
              "src": "1482:590:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1175,
                                  "name": "poorGuyVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "1527:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1176,
                                  "name": "poorGuySecret",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1168,
                                  "src": "1540:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1173,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2718,
                                  "src": "1510:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1510:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1510:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1172,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2725,
                            "src": "1500:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1500:55:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1179,
                          "name": "poorGuyBlindedVote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1166,
                          "src": "1559:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1500:77:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2734,
                        2735
                      ],
                      "referencedDeclaration": 2734,
                      "src": "1492:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:86:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:86:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1183,
                    "name": "poorGuyVote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1164,
                    "src": "1591:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "1841:225:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                "typeString": "enum VotingEngine.ProposalStatus"
                              },
                              "id": 1218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1212,
                                    "name": "proposalRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1450,
                                    "src": "1863:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_proposal_$1442_storage_$",
                                      "typeString": "mapping(bytes32 => struct VotingEngine.proposal storage ref)"
                                    }
                                  },
                                  "id": 1214,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1213,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1162,
                                    "src": "1880:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1863:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_proposal_$1442_storage",
                                    "typeString": "struct VotingEngine.proposal storage ref"
                                  }
                                },
                                "id": 1215,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "1863:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1216,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "1902:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1424_$",
                                    "typeString": "type(enum VotingEngine.ProposalStatus)"
                                  }
                                },
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "Accepted",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1902:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "src": "1863:62:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1211,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2734,
                              2735
                            ],
                            "referencedDeclaration": 2734,
                            "src": "1855:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1855:71:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1220,
                        "nodeType": "ExpressionStatement",
                        "src": "1855:71:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1222,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "1956:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1224,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "1976:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1223,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "1965:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1965:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1221,
                            "name": "decreaseBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2451,
                            "src": "1940:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1940:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1227,
                        "nodeType": "ExpressionStatement",
                        "src": "1940:45:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1229,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2731,
                                "src": "2012:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2012:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1231,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "2024:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1233,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "2044:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1232,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "2033:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2033:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1228,
                            "name": "Slashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "2004:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2004:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1236,
                        "nodeType": "EmitStatement",
                        "src": "1999:54:3"
                      }
                    ]
                  },
                  "id": 1238,
                  "nodeType": "IfStatement",
                  "src": "1588:478:3",
                  "trueBody": {
                    "id": 1210,
                    "nodeType": "Block",
                    "src": "1604:231:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                "typeString": "enum VotingEngine.ProposalStatus"
                              },
                              "id": 1191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1185,
                                    "name": "proposalRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1450,
                                    "src": "1626:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_proposal_$1442_storage_$",
                                      "typeString": "mapping(bytes32 => struct VotingEngine.proposal storage ref)"
                                    }
                                  },
                                  "id": 1187,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1186,
                                    "name": "proposalId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1162,
                                    "src": "1643:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1626:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_proposal_$1442_storage",
                                    "typeString": "struct VotingEngine.proposal storage ref"
                                  }
                                },
                                "id": 1188,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1436,
                                "src": "1626:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1189,
                                  "name": "ProposalStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1424,
                                  "src": "1665:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1424_$",
                                    "typeString": "type(enum VotingEngine.ProposalStatus)"
                                  }
                                },
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ProposalRejected",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1665:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProposalStatus_$1424",
                                  "typeString": "enum VotingEngine.ProposalStatus"
                                }
                              },
                              "src": "1626:70:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2734,
                              2735
                            ],
                            "referencedDeclaration": 2734,
                            "src": "1618:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1618:79:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1193,
                        "nodeType": "ExpressionStatement",
                        "src": "1618:79:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1195,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "1727:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1197,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "1747:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1196,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "1736:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1736:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1194,
                            "name": "decreaseBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2451,
                            "src": "1711:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1711:45:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1200,
                        "nodeType": "ExpressionStatement",
                        "src": "1711:45:3"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1202,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2731,
                                "src": "1783:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1783:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1204,
                              "name": "poorGuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1160,
                              "src": "1795:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1206,
                                  "name": "poorGuy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1160,
                                  "src": "1815:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1205,
                                "name": "vouchersOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "1804:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 1207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1804:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1201,
                            "name": "Slashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "1775:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1775:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1209,
                        "nodeType": "EmitStatement",
                        "src": "1770:54:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev can be called by anybody to slash a person if this person deserves slashing\n@param poorGuy The address which will be slashed\n@param proposalId the identifier of the vote to which the poorguy casted a 'wrong' vote\n@param poorGuyVote the non-blinded vote of the poorGuy\n@param poorGuyBlindedVote the blinded vote of the poorGuy\n@param poorGuySecret the secret which was used by the poorGuy to shield his blindedVote from the public",
            "id": 1240,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "slash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "name": "poorGuy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1375:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1162,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1392:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1164,
                  "name": "poorGuyVote",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1412:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1412:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1166,
                  "name": "poorGuyBlindedVote",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1430:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "name": "poorGuySecret",
                  "nodeType": "VariableDeclaration",
                  "scope": 1240,
                  "src": "1458:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1374:107:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:3"
            },
            "scope": 1241,
            "src": "1360:712:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1242,
        "src": "686:1389:3"
      }
    ],
    "src": "292:1784:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-15T12:18:58.958Z"
}